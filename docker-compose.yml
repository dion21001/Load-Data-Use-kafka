version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - docker_kafka
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"    
      - "9093:9093"  
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_EXTERNAL://${ip}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
    depends_on:
      - zookeeper
    networks:
      - docker_kafka
    restart: always

  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${db_docker_compose}
      MYSQL_PASSWORD: ${db_docker_compose}
      MYSQL_DATABASE: ${db_name}
    networks:
      - docker_kafka
    restart: always

  django:
    build: 
      context: .
    ports:
      - "1234:1234"
    networks:
      - docker_kafka
    restart: always
    depends_on:
      - db
      - kafka

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1      
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1      
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1      
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
    volumes:
      - ./kafka-connect-jars:/etc/kafka-connect/jars
      - ./kafka-connect-config:/kafka-connect-config
    depends_on:
      - kafka
      - zookeeper
      - db
    networks:
      - docker_kafka
    command: >
      bash -c "
        /etc/confluent/docker/run & 
        sleep 20 && 
        for file in /kafka-connect-config/*.json; do
          echo Registering connector $${file};
          curl -X POST -H 'Content-Type: application/json' --data @$${file} http://localhost:8083/connectors;
        done
        wait
      "
    restart: always


  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control_center
    restart: always
    depends_on:
      - kafka
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    ports:
    - "9021:9021"    
    networks:
      - docker_kafka
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema_registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8084"
    ports:
      - "8084:8081"
    networks:
      - docker_kafka

networks:
  docker_kafka:
    driver: bridge
